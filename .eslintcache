[{"/home/leonelp/repos/infomovies/src/index.js":"1","/home/leonelp/repos/infomovies/src/App.js":"2","/home/leonelp/repos/infomovies/src/reportWebVitals.js":"3","/home/leonelp/repos/infomovies/src/components/Header.jsx":"4","/home/leonelp/repos/infomovies/src/components/Footer.jsx":"5","/home/leonelp/repos/infomovies/src/components/Routes.jsx":"6","/home/leonelp/repos/infomovies/src/components/BusquedaPorPersona.jsx":"7","/home/leonelp/repos/infomovies/src/components/BusquedaPorNombre.jsx":"8","/home/leonelp/repos/infomovies/src/components/resources/buttonsData.js":"9","/home/leonelp/repos/infomovies/src/components/Pelicula.jsx":"10","/home/leonelp/repos/infomovies/src/components/ListaDePeliculas.jsx":"11","/home/leonelp/repos/infomovies/src/components/ListaDePersonas.jsx":"12","/home/leonelp/repos/infomovies/src/components/Persona.jsx":"13","/home/leonelp/repos/infomovies/src/components/BusquedaPorGenero.jsx":"14","/home/leonelp/repos/infomovies/src/components/resources/genres.js":"15"},{"size":565,"mtime":1608260210067,"results":"16","hashOfConfig":"17"},{"size":389,"mtime":1610431407736,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1608225623868,"results":"19","hashOfConfig":"17"},{"size":1523,"mtime":1611339311812,"results":"20","hashOfConfig":"17"},{"size":672,"mtime":1611339400609,"results":"21","hashOfConfig":"17"},{"size":911,"mtime":1611339269583,"results":"22","hashOfConfig":"17"},{"size":3363,"mtime":1611684053470,"results":"23","hashOfConfig":"17"},{"size":4398,"mtime":1611683910452,"results":"24","hashOfConfig":"17"},{"size":242,"mtime":1611171231060,"results":"25","hashOfConfig":"17"},{"size":2773,"mtime":1611208997814,"results":"26","hashOfConfig":"17"},{"size":1843,"mtime":1610610313242,"results":"27","hashOfConfig":"17"},{"size":1833,"mtime":1611167750588,"results":"28","hashOfConfig":"17"},{"size":2660,"mtime":1611208894734,"results":"29","hashOfConfig":"17"},{"size":2999,"mtime":1611682892278,"results":"30","hashOfConfig":"17"},{"size":580,"mtime":1611337263720,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1gcowev",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"/home/leonelp/repos/infomovies/src/index.js",[],["67","68"],"/home/leonelp/repos/infomovies/src/App.js",[],"/home/leonelp/repos/infomovies/src/reportWebVitals.js",[],"/home/leonelp/repos/infomovies/src/components/Header.jsx",["69"],"import React from \"react\";\nimport { AppBar, Toolbar, Typography, Button, Link } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport buttonsData from \"./resources/buttonsData.js\";\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nconst styles = {\n  menuButton: {\n    fontFamily: \"Open sans, sans-serif\",\n    marginLeft: \"38px\",\n    size: \"18px\",\n    fontWeight: 700,\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  logo: {\n    textAlign: \"left\",\n  },\n  header: {\n    backgroundColor: \"#000000\",\n    paddingRight: \"79px\",\n    paddingLeft: \"118px\",\n  },\n};\n\nconst Header = (props) => {\n  const { classes } = props;\n  const getButtonData = () => {\n    return buttonsData.map(({ label, href }) => {\n      {\n        return (\n          <Button\n            {...{\n              color: \"inherit\",\n              key:  label ,\n              to:  href ,\n              component: RouterLink,\n              className: classes.menuButton,\n            }}\n          >\n            {label}\n          </Button>\n        );\n      }\n    });\n  };\n\n  return (\n    <header>\n      <AppBar className={classes.header}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.logo}>\n            <Link color=\"inherit\" to=\"/\" component={RouterLink}> InfoMovies </Link>\n          </Typography>\n          <div className={classes.toolbar}>{getButtonData()}</div>\n        </Toolbar>\n      </AppBar>\n    </header>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","/home/leonelp/repos/infomovies/src/components/Footer.jsx",[],"/home/leonelp/repos/infomovies/src/components/Routes.jsx",[],"/home/leonelp/repos/infomovies/src/components/BusquedaPorPersona.jsx",[],"/home/leonelp/repos/infomovies/src/components/BusquedaPorNombre.jsx",[],"/home/leonelp/repos/infomovies/src/components/resources/buttonsData.js",[],"/home/leonelp/repos/infomovies/src/components/Pelicula.jsx",["70"],"import React, { useState, useEffect } from \"react\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  paper: {\n    position: \"relative\",\n    top: \"7em\",\n    margin: \"auto\",\n    width: \"60em\",\n    height: \"35em\",\n    padding: \"20px\",\n  },\n  imagenPelicula: {\n    width: \"20em\",\n    height: \"20em\",\n    borderRadius: \"2px\",\n    position: \"relative\",\n  },\n  titulo: {\n    position: \"relative\",\n    top: \"-11.5em\",\n    left: \"13.2em\",\n    maxWidth: \"300px\",\n  },\n  descripcion: {\n    position: \"relative\",\n    top: \"-16em\",\n    left: \"20em\",\n    width: \"28.5em\",\n    height: \"11.25em\",\n  },\n  fechaLanzamiento: {\n    position: \"relative\",\n    top: \"-15.5em\",\n    left: \"20em\",\n    maxWidth: \"28.5em\",\n  },\n  otrosDatos: {\n    position: \"relative\",\n    top: \"-13.7em\",\n    left: \"0.5em\",\n    padding: \"3px 0\",\n  },\n};\n\nconst Pelicula = (props) => {\n  const { classes } = props;\n\n  //Extraigo el ID mediante la URL\n  const id = props.match.params.id;\n\n  useEffect(() => {\n\n    \n    getMovie(id);\n  }, []);\n\n  const [pelicula, setPelicula] = useState({});\n\n  //Ahora busco la pelicula en la API para renderizarla.\n  const getMovie = async (id) => {\n    let url =\n      \"https://api.themoviedb.org/3/movie/\" +\n      id +\n      \"?api_key=2bfde98323b35592c98968f6ac494fc7&language=en-US\";\n    let resultado = \"\";\n    try {\n      await fetch(url)\n        .then((response) => response.json())\n        .then((data) => (resultado = data));\n    } catch (error) {\n      console.log(error);\n    }\n    setPelicula(resultado);\n  };\n\n  const {title, overview, popularity, release_date, vote_count, vote_average} = pelicula;\n  const pathImagen = pelicula.poster_path;\n  const urlImagen = \"https://image.tmdb.org/t/p/w185\" + pathImagen;\n\n  return (\n    <Paper className={classes.paper}>\n      <img className={classes.imagenPelicula} src={urlImagen} alt=\"\"></img>\n      <Typography variant=\"h5\" className={classes.titulo}>\n        {title}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.descripcion}>\n        {\" \"}\n        {overview}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.fechaLanzamiento}>\n        <strong>Release date:</strong> {release_date}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.otrosDatos}>\n        <strong>Vote count : </strong> {vote_count}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.otrosDatos}>\n        <strong>Vote average: </strong> {vote_average}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.otrosDatos}>\n        <strong>Popularity: </strong>\n        {popularity}\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Pelicula);\n","/home/leonelp/repos/infomovies/src/components/ListaDePeliculas.jsx",[],"/home/leonelp/repos/infomovies/src/components/ListaDePersonas.jsx",[],"/home/leonelp/repos/infomovies/src/components/Persona.jsx",["71"],"import React, { useState, useEffect } from \"react\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  paper: {\n    position: \"relative\",\n    top: \"7em\",\n    margin: \"auto\",\n    width: \"60em\",\n    height: \"35em\",\n    padding: \"20px\",\n  },\n  imagenPersona: {\n    width: \"20em\",\n    height: \"20em\",\n    borderRadius: \"2px\",\n    position: \"relative\",\n  },\n  titulo: {\n    position: \"relative\",\n    top: \"-11.5em\",\n    left: \"13.2em\",\n    maxWidth: \"300px\",\n  },\n  biografia: {\n    position: \"relative\",\n    top: \"-16em\",\n    left: \"20em\",\n    width: \"28.5em\",\n    height: \"13.25em\",\n    overflowY: \"scroll\",\n  },\n  otrosDatos: {\n    position: \"relative\",\n    top: \"-14.7em\",\n    left: \"0.5em\",\n    padding: \"3px 0\",\n  },\n};\n\nconst Persona = (props) => {\n  const { classes } = props;\n\n  //Extraigo el ID mediante la URL\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    getPersona(id);\n  }, []);\n\n  const [persona, setPersona] = useState({});\n\n  //Ahora busco la Persona en la API para renderizarla.\n  const getPersona = async (id) => {\n    let url = \"https://api.themoviedb.org/3/person/\"+ id + \"?api_key=2bfde98323b35592c98968f6ac494fc7&language=en-US\";\n    let resultado = \"\";\n    try {\n      await fetch(url)\n        .then((response) => response.json())\n        .then((data) => (resultado = data));\n    } catch (error) {\n      console.log(error);\n    }\n    setPersona(resultado);\n  };\n\n  const {name, biography, popularity, birthday, place_of_birth, gender} = persona;\n  const pathImagen = persona.profile_path;\n  const urlImagen = \"https://image.tmdb.org/t/p/w185\" + pathImagen;\n\n  return (\n    <Paper className={classes.paper}>\n      <img className={classes.imagenPersona} src={urlImagen} alt= \"\"></img>\n      <Typography variant=\"h5\" className={classes.titulo}>\n        {name}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.biografia}>\n        {biography}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.otrosDatos}>\n        <strong>Birthday:</strong> {birthday}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.otrosDatos}>\n        <strong>Gender: </strong> {gender === 1 ? \"Female\" : gender === 2 ? \"Male\" : \"N/D\"}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.otrosDatos}>\n        <strong>Place of Birth: </strong> {place_of_birth}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.otrosDatos}>\n        <strong>Popularity: </strong>\n        {popularity}\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Persona);","/home/leonelp/repos/infomovies/src/components/BusquedaPorGenero.jsx",["72"],"/home/leonelp/repos/infomovies/src/components/resources/genres.js",["73"],"const generos = [{\"id\":28,\"name\":\"Action\"},{\"id\":12,\"name\":\"Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":14,\"name\":\"Fantasy\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":10402,\"name\":\"Music\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},{\"id\":53,\"name\":\"Thriller\"},{\"id\":10752,\"name\":\"War\"},{\"id\":37,\"name\":\"Western\"}];\n\nexport default {generos};",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":34,"column":7,"nodeType":"80","messageId":"81","endLine":48,"endColumn":8},{"ruleId":"82","severity":1,"message":"83","line":57,"column":6,"nodeType":"84","endLine":57,"endColumn":8,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"83","line":50,"column":6,"nodeType":"84","endLine":50,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":37,"nodeType":"89","messageId":"90","endLine":1,"endColumn":46},{"ruleId":"91","severity":1,"message":"92","line":5,"column":1,"nodeType":"93","endLine":5,"endColumn":24},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["96"],["97"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"Update the dependencies array to be: [id]",{"range":"101","text":"102"},{"range":"103","text":"102"},[1075,1077],"[id]",[977,979]]